"use strict";var e=require("@prisma/generator-helper"),t=require("typescript"),a=require("zod"),r=require("path"),n=require("ts-morph"),i=require("parenthesis");function o(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var s=o(r);const l=a.z.enum(["true","false"]).transform((e=>JSON.parse(e))),c=a.z.object({relationModel:l.default("true").or(a.z.literal("default")),modelSuffix:a.z.string().default("Model"),modelCase:a.z.enum(["PascalCase","camelCase"]).default("PascalCase"),useDecimalJs:l.default("false"),imports:a.z.string().optional(),prismaJsonNullability:l.default("true")}),m=(e,t,a=!0)=>t.forEach((t=>e.write(t).conditionalNewLine(a))),d=({modelCase:e,modelSuffix:t,relationModel:a})=>{const r=(a,r="")=>("camelCase"===e&&(a=a.slice(0,1).toLowerCase()+a.slice(1)),`${r}${a}${t}`);return{modelName:e=>r(e,"default"===a?"_":""),relatedModelName:e=>r("default"===a?e.toString():`Related${e.toString()}`)}},u=e=>{const t=e.replace(/^\\\\\?\\/,"").replace(/\\/g,"/").replace(/\/\/+/g,"/");return t.includes("/node_modules/")?t.split("/node_modules/").slice(-1)[0]:t.startsWith("../")?t:"./"+t},p=e=>{const t=[];if(e){const a=e.split("\n").filter((e=>!e.trimStart().startsWith("@zod")));a.length&&(t.push("/**"),a.forEach((e=>t.push(` * ${e}`))),t.push(" */"))}return t},f=e=>e.split("\n").filter((e=>e.trimStart().startsWith("@zod"))).map((e=>e.trimStart().slice(4))).flatMap((e=>{return(t=i.parse(e),t.reduce(((e,t,a)=>a%2==0?[...e,[t]]:[...e.slice(0,-1),[...e.slice(-1)[0],t]]),[])).slice(0,-1).map((([e,t])=>e.replace(/\)?\./,"")+`${i.stringify(t)})`));var t})),h=(e,t=(e=>e.toString()))=>{let a="z.unknown()",r=[""];if("scalar"===e.kind)switch(e.type){case"String":a="z.string()";break;case"Int":a="z.number()",r.push("int()");break;case"BigInt":a="z.bigint()";break;case"DateTime":a="z.date()";break;case"Float":case"Decimal":a="z.number()";break;case"Json":a="jsonSchema";break;case"Boolean":a="z.boolean()";break;case"Bytes":a="z.unknown()"}else"enum"===e.kind?a=`z.nativeEnum(${e.type})`:"object"===e.kind&&(a=t(e.type));var n,i,o;return e.isList&&r.push("array()"),e.documentation&&(a=null!=(n=null==(i=f(e.documentation).find((e=>e.startsWith("custom("))))?void 0:i.slice(7).slice(0,-1))?n:a,r.push(...(o=e.documentation,f(o).filter((e=>!e.startsWith("custom(")))))),e.isRequired||"Json"===e.type||r.push("nullish()"),`${a}${r.join(".")}`};e.generatorHandler({onManifest:()=>({version:"0.5.4",prettyName:"Zod Schemas",defaultOutput:"zod"}),onGenerate(e){const a=new n.Project,r=e.dmmf.datamodel.models,i=e.dmmf.datamodel.enums,{schemaPath:o}=e,l=e.generator.output.value,f=e.otherGenerators.find((e=>"prisma-client-js"===e.provider.value)).output.value,S=c.safeParse(e.generator.config);if(!S.success)throw new Error("Incorrect config provided. Please check the values you provided and try again.");const z=S.data,y={clientPath:f,outputPath:l,schemaPath:o},b=a.createSourceFile(`${l}/index.ts`,{},{overwrite:!0});if(((e,t)=>{t.addExportDeclaration({moduleSpecifier:"./enums"}),e.forEach((e=>t.addExportDeclaration({moduleSpecifier:`./${e.name.toLowerCase()}`})))})(r,b),b.formatText({indentSize:2,convertTabsToSpaces:!0,semicolons:t.SemicolonPreference.Remove}),r.forEach((e=>{const r=a.createSourceFile(`${l}/${e.name.toLowerCase()}.ts`,{},{overwrite:!0});((e,t,a,r)=>{((e,t,a,{schemaPath:r,outputPath:i})=>{const{relatedModelName:o}=d(a),l=[{kind:n.StructureKind.ImportDeclaration,namespaceImport:"z",moduleSpecifier:"zod"}];a.imports&&l.push({kind:n.StructureKind.ImportDeclaration,namespaceImport:"imports",moduleSpecifier:u(s.default.relative(i,s.default.resolve(s.default.dirname(r),a.imports)))}),a.useDecimalJs&&e.fields.some((e=>"Decimal"===e.type))&&l.push({kind:n.StructureKind.ImportDeclaration,namedImports:["Decimal"],moduleSpecifier:"decimal.js"});const c=e.fields.filter((e=>"enum"===e.kind)),m=e.fields.filter((e=>"object"===e.kind));if(c.length>0&&l.push({kind:n.StructureKind.ImportDeclaration,isTypeOnly:0===c.length,moduleSpecifier:u("enums"),namedImports:c.map((e=>e.type))}),!1!==a.relationModel&&m.length>0){const t=m.filter((t=>t.type!==e.name));t.length>0&&l.push({kind:n.StructureKind.ImportDeclaration,moduleSpecifier:"./index",namedImports:Array.from(new Set(t.flatMap((e=>[`Complete${e.type}`,o(e.type)]))))})}t.addImportDeclarations(l)})(e,t,a,r),((e,t,a,r)=>{e.fields.some((e=>"Json"===e.type))&&t.addStatements((e=>{e.newLine(),m(e,["// Helper schema for JSON fields","type Literal = boolean | number | string"+(a.prismaJsonNullability?"":"| null"),"type Json = Literal | { [key: string]: Json } | Json[]",`const literalSchema = z.union([z.string(), z.number(), z.boolean()${a.prismaJsonNullability?"":", z.null()"}])`,"const jsonSchema: z.ZodSchema<Json> = z.lazy(() => z.union([literalSchema, z.array(jsonSchema), z.record(jsonSchema)]))"])})),a.useDecimalJs&&e.fields.some((e=>"Decimal"===e.type))&&t.addStatements((e=>{e.newLine(),m(e,["// Helper schema for Decimal fields","z",".instanceof(Decimal)",".or(z.string())",".or(z.number())",".refine((value) => {","  try {","    return new Decimal(value);","  } catch (error) {","    return false;","  }","})",".transform((value) => new Decimal(value));"])}))})(e,t,a),((e,t,a,r)=>{const{modelName:i}=d(a);t.addVariableStatement({declarationKind:n.VariableDeclarationKind.Const,isExported:!0,leadingTrivia:e=>e.blankLineIfLastNot(),declarations:[{name:i(e.name),initializer(t){t.write("z.object(").inlineBlock((()=>{e.fields.filter((e=>"object"!==e.kind)).forEach((e=>{m(t,p(e.documentation)),t.write(`${e.name}: ${h(e)}`).write(",").newLine()}))})).write(")")}}]})})(e,t,a),((e,t)=>e.fields.some((e=>"object"===e.kind))&&!1!==t.relationModel)(e,a)&&((e,t,a,r)=>{const{modelName:i,relatedModelName:o}=d(a),s=e.fields.filter((e=>"object"===e.kind));t.addInterface({name:`Complete${e.name}`,isExported:!0,extends:[`z.infer<typeof ${i(e.name)}>`],properties:s.map((e=>({hasQuestionToken:!e.isRequired,name:e.name,type:`Complete${e.type}${e.isList?"[]":""}${e.isRequired?"":" | null"}`})))}),t.addStatements((t=>m(t,["","/**",` * ${o(e.name)} contains all relations on your model in addition to the scalars`," *"," * NOTE: Lazy required in case of potential circular dependencies within schema"," */"]))),t.addVariableStatement({declarationKind:n.VariableDeclarationKind.Const,isExported:!0,declarations:[{name:o(e.name),type:`z.ZodSchema<Complete${e.name}>`,initializer(t){t.write(`z.lazy(() => ${i(e.name)}.extend(`).inlineBlock((()=>{s.forEach((e=>{m(t,p(e.documentation)),t.write(`${e.name}: ${h(e,o)}`).write(",").newLine()}))})).write("))")}}]})})(e,t,a)})(e,r,z,y),r.formatText({indentSize:2,convertTabsToSpaces:!0,semicolons:t.SemicolonPreference.Remove})})),i.length>0){const e=a.createSourceFile(`${l}/enums.ts`,{},{overwrite:!0});((e,t)=>{e.forEach((({name:e,values:a})=>{const r=a.map((({name:e})=>({name:e,value:e})));t.addEnum({name:e,members:r}).setIsExported(!0)}))})(i,e),e.formatText({indentSize:2,convertTabsToSpaces:!0,semicolons:t.SemicolonPreference.Remove})}return a.save()}});
//# sourceMappingURL=zod-prisma.cjs.production.min.js.map
